#!/usr/bin/env bash

red=`tput setaf 1`
green=`tput setaf 2`
reset=`tput sgr0`

if ! [ -x "$(command -v docker)" ]; then
  echo "⚠️  ${red}Error: Docker is required and not installed. Please install it before running this script.${reset}"
  open 'https://www.docker.com/docker-mac'
  exit 1
fi

COMPOSE="docker-compose -f ./config/docker-compose.yml"
EXEC="docker run --rm -it -v "${PWD}":/build elivz/dev-utils"

case "$1" in
    "init")
        ./run build
        ./run update
        ;;

    "build")
        echo "🏁  ${green}Initializing Docker images${reset}"
        docker pull elivz/dev-utils
        ${COMPOSE} pull --parallel
        ${COMPOSE} build
        ;;

    "update")
        if [ -f package.json ]; then
            echo "📦  ${green}Updating Node dependencies from package.json${reset}"
            ${EXEC} yarn
        fi
        if [ -f composer.json ]; then
            echo "📦  ${green}Updating PHP dependencies from composer.json${reset}"
            ${EXEC} composer update
        fi
        ;;

    "start")
        echo "${green}Starting your Docker images${reset}"
        ${COMPOSE} up -d
        echo "✅  ${green}Open http://localhost:8080 to begin work${reset}"
        ;;

    "stop")
        echo "🛑  ${red}Killing your Docker images${reset}"
        ${COMPOSE} down
        ;;

    "sync")
        echo "☁️  ${green}Pulling assets and database from the remote server${reset}"
        echo "[TODO]"
        ;;

    "yarn")
        shift 1
        ${EXEC} yarn "$@"
        ;;

    "composer")
        shift 1
        ${EXEC} composer "$@"
        ;;

    *)
        ${EXEC} "$@"
        ;;
esac
